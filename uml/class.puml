@startuml

package Server {
    class Server {
        #ServerSocket server
        -ArrayList<combinedGames> allGames
        #makeServer()
        #serverLopp()
    }
    class ServerThread {
        #String line
        #BufferedReader input
        #PrintWriter output
        -PrintWriter player2
        -ServerParser parser
        -Game game
        CombinedGame sheredGame

        #connect(Socket socket)
        #readInput()
        +setPlayer2()
        +run()
        -playJoin()
        -playBot()
        -Game createGame()
    }
    package Geme {
        class Game {
            ~BoardField[][] fields
            -boolean blackPassed
            -boolean whitePassed
            -boolean blackTurn
            -String id
            -Bot aiBot
            -int boardSize

            ---
            -randomID()
            ---
            +String getID()
            +boolean getBot()
            +getSize()
            ---
            +Point botMove()
            +boolean won()
            +String move(Point)
            ---
            -pass()
            -unPass()
            == Rules ==
            +validateMove(Point)
            +countWinner()
            -int capture(Point)
            -boolean dead(Point)
            -boolean occupied(Point)
            -boolean koViolation(Point)
            -int countTerritory(BoardField color)
        }
        class Bot {
            -Game game
            ~Point bestMove()
            -int eveluatePoint()
        }
        Bot -* Game
    }
    package Blocks {
        class ColoredPoint {
            BoardField color
            get()
            set()
        }
        class CombinedGame {
            Game game
            ServerThread player
            get()
        }
        class GameConfig {
            boolean bot
            int size
            String id
            get();
        }
        class Point {
            int x
            int y
            get()
            set()
        }
        Point <|-- ColoredPoint
    }
    package parser {
        interface ServerParser{
            setLine()
            Point parsePoint()
            GameConfig parseGameConfig()
            String parseMoveResponse()
            String parseWinner()
            String prepareGameConfig(int size)
            String PrepareGames(ArrayList<combinedGame> games)
        }
        class ServerParserJson {
            -String parsedLine
            -- implemened functions --
            +setLine()
            +Point parsePoint()
            +GameConfig parseGameConfig()
            +String parseMoveResponse()
            +String parseWinner()
            +String prepareGameConfig(int size)
            +String PrepareGames(ArrayList<combinedGame> games)
        }

        ServerParser <|..ServerParserJson
    }
}

@enduml